<Exercise id="1">
  <name>DS8-R04 Regressionsrechnung 4</name>
  <publicDescription></publicDescription>
  <internalNotes>Zuf√§lligen Wert in Regressionsfunktion einsetzen (predict()-Funktion)

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>Desk_22</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">cmVnIDwtIGxtKHdhaXRpbmd+ZXJ1cHRpb25zLGRhdGE9ZmFpdGhmdWwpDQp2YWx1ZSA8LSBkYXRhLmZyYW1lKGVydXB0aW9ucz1bdmFyPXZhbF0pDQo=</content>
      <uploadTimestamp>2022-04-11T10:38:39.87875</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>#1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Wie lange m&amp;uuml;ssen Sie durchschnittlich auf die n&amp;auml;chste Eruption warten, wenn die letzte Eruption $[var=val]$ Minuten gedauert hat?&lt;br /&gt;&#xd;
Benutzen Sie zur Beantwortung der Frage die $\verb|predict()|$-Funktion.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Sowohl das lm-Objekt ($\verb|reg|$) als auch der Wert, f&amp;uuml;r den prognostiziert werden soll ($\verb|value|$) sind bereits vordefiniert.&amp;nbsp;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;span style=&quot;font-size:11px;&quot;&gt;&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;&lt;/span&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Sie m&amp;uuml;ssen den vorgegebenen Wert in die Regressionsfunktion einsetzen.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="16">
          <stagehint__order>1</stagehint__order>
          <text>&amp;Uuml;bergeben Sie dazu der $\verb|predict()|$-Funktion zuerst das lm-Objekt und danach den Wert, f&amp;uuml;r den prognostiziert werden soll.</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="17"/>
      <variableUpdatesBeforeCheck id="18"/>
      <variableUpdatesAfterCheck id="19"/>
      <variableUpdatesOnNormalExit id="20"/>
      <variableUpdatesOnRepeat id="21"/>
      <variableUpdatesOnSkip id="22"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="23"/>
      <initialCode>reg &lt;- lm(waiting~eruptions,data=faithful)
value &lt;- data.frame(eruptions=[var=val])
</initialCode>
      <finalResultComputationString>min(#{c27191},#{c27190})</finalResultComputationString>
      <testCasetuples id="24">
        <TestCaseTuple id="25">
          <testCases id="26">
            <StaticRTestCase id="27">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! Benutzen Sie $\verb|predict()|$-Funktion und achten Sie darauf, die vordefinierten Variablen zu benutzen.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="28">
                <RGReQLQuery id="29">
                  <query>      from pred:V{FunctionCall}, reg,val:V{Variable} with
      pred.name=&quot;predict&quot; and
      pred --&gt;* reg and
      pred --&gt;* val and
      reg.name=&quot;reg&quot; and
      val.name=&quot;value&quot;
      report 0 end
    </query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="30">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>27190</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="31">
          <testCases id="32">
            <DynamicRTestCase id="33">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! </feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}</postCode>
              <expectedOutput>predict(lm(waiting~eruptions,data=faithful),data.frame(eruptions=[var=val]))</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="34">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>27191</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="35">
    <VariableDeclaration id="36">
      <name>val</name>
      <initializationCode id="37">
        <code>evaluateInR(&apos;round(runif(1, 5, 10), 2)&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
  </variableDeclarations>
  <jSXGraphs id="38"/>
  <dynamicMolecules id="39"/>
  <resultFeedbackMappings id="40"/>
</Exercise>