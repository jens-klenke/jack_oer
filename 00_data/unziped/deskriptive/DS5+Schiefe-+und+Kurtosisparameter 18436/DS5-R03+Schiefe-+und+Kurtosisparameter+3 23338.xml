<Exercise id="1">
  <name>DS5-R03 Schiefe- und Kurtosisparameter 3</name>
  <publicDescription></publicDescription>
  <internalNotes>Relative Schiefe berechnen (mit skewness()-Befehl)

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>Desk_22</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">aGVhZChyZXR1cm5zIDwtIEV1U3RvY2tNYXJrZXRzL2xhZyhFdVN0b2NrTWFya2V0cywtMSktMSkNCg==</content>
      <uploadTimestamp>2022-03-22T10:30:39.028427</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>#1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Neben der Berechnung des relativen Schiefeparameters mit Hilfe der entsprechenden Formel gibt es auch die M&amp;ouml;glichkeit die Funktion $\verb|skewness()|$ zu benutzen, die das Ganze etwas schneller und effizienter macht.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Berechnen Sie diesmal die relative Schiefe der Returns aller 4 europ&amp;auml;ischen Aktienindizes und benutzen Sie dabei die $\verb|skewness()|$-Funktion. Die Returns f&amp;uuml;r alle 4 Indizes sind bereits in der Variable $\verb|returns|$ vordefiniert.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Wenden Sie den Befehl $\verb|skewness()|$ auf die vordefinierte Variable $\verb|returns|$ an.</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="16"/>
      <variableUpdatesBeforeCheck id="17"/>
      <variableUpdatesAfterCheck id="18"/>
      <variableUpdatesOnNormalExit id="19"/>
      <variableUpdatesOnRepeat id="20"/>
      <variableUpdatesOnSkip id="21"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="22"/>
      <initialCode>head(returns &lt;- EuStockMarkets/lag(EuStockMarkets,-1)-1)</initialCode>
      <finalResultComputationString>#{c23343}</finalResultComputationString>
      <testCasetuples id="23">
        <TestCaseTuple id="24">
          <testCases id="25">
            <StaticRTestCase id="26">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig.

 Benutzen Sie den Befehl $\verb|skewness()|$.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="27">
                <RGReQLQuery id="28">
                  <query>from skew:V{FunctionCall}, ret:V{Variable} with 
                skew.name=&quot;skewness&quot; and
                ret.name=&quot;returns&quot; and
                skew --&gt;* ret
                report 0 
end
		</query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="29">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>23343</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="30"/>
  <jSXGraphs id="31"/>
  <dynamicMolecules id="32"/>
  <resultFeedbackMappings id="33"/>
</Exercise>