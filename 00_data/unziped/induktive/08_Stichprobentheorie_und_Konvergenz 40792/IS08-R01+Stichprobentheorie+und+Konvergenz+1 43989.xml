<Exercise id="1">
  <name>IS08-R01 Stichprobentheorie und Konvergenz 1</name>
  <publicDescription></publicDescription>
  <internalNotes>Stichprobenmittelwert bei 10000 Würfen eines fairen Würfels

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>IndStat</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">c2V0LnNlZWQoW3Zhcj1zXSk=</content>
      <uploadTimestamp>2022-05-11T11:23:30.428425</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Simulieren Sie das $10000$-malige W&amp;uuml;rfeln eines fairen $6$-seitigen W&amp;uuml;rfels und berechnen Sie den entsprechenden Stichprobenmittelwert.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Was f&amp;auml;llt Ihnen auf? Vergleichen Sie ihr Ergebnis insbesondere mit dem Erwartungswert dieses Zufallsexperiments.&lt;br /&gt;&#xd;
&lt;em&gt;(Hinweis: Zur Simulation des $n$-maligen W&amp;uuml;rfelns k&amp;ouml;nnen Sie die $\verb|sample()|$-Funktion benutzen.)&lt;/em&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; Ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Innerhalb der $\verb|sample(x,size,replace=FALSE)|$-Funktion m&amp;uuml;ssen Sie neben dem Stichprobenraum $\verb|x|$ sowie der Anzahl der zu ziehenden Elemente $\verb|size|$ auch festlegen, ob mit oder ohne Zur&amp;uuml;cklegen gezogen wird. Letzterer Parameter ist standardm&amp;auml;&amp;szlig;ig auf ohne Zur&amp;uuml;cklegen gestellt.&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden.)</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="16">
          <stagehint__order>1</stagehint__order>
          <text>Der Stichprobenraum ist $\Omega=\{1,2,3,4,5,6\}$ und Sie ziehen mit Zur&amp;uuml;cklegen, da nach jedem Wurf weiterhin alle Augenzahlen bei einem n&amp;auml;chsten Wurf m&amp;ouml;glich sind.&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden.)</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="17">
          <stagehint__order>2</stagehint__order>
          <text>Für den Stichprobenmittelwert können Sie die $\verb|mean()|$-Funktion benutzen.</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="18"/>
      <variableUpdatesBeforeCheck id="19"/>
      <variableUpdatesAfterCheck id="20"/>
      <variableUpdatesOnNormalExit id="21"/>
      <variableUpdatesOnRepeat id="22"/>
      <variableUpdatesOnSkip id="23"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="24"/>
      <initialCode>set.seed([var=s])</initialCode>
      <finalResultComputationString></finalResultComputationString>
      <testCasetuples id="25">
        <TestCaseTuple id="26">
          <testCases id="27">
            <StaticRTestCase id="28">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig. 

Achten Sie darauf, dass Sie die $\verb|mean()|$- sowie $\verb|sample()|$-Funktion benutzen.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="29">
                <RGReQLQuery id="30">
                  <query>                from mean,sample:V{FunctionCall} with
                mean.name=&quot;mean&quot; and
                sample.name=&quot;sample&quot;
                report 0 end</query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="31">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>43993</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="32">
          <testCases id="33">
            <DynamicRTestCase id="34">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig. </feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}
	blah &lt;- function(s){
		set.seed(s)
		mean(sample(1:6,10000,T))
	}
	
	</postCode>
              <expectedOutput>blah([var=s])</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="35">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>43994</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="36">
    <VariableDeclaration id="37">
      <name>s</name>
      <initializationCode id="38">
        <code>evaluateInR(&apos;round(runif(1, 1, 1000))&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
  </variableDeclarations>
  <jSXGraphs id="39"/>
  <dynamicMolecules id="40"/>
  <resultFeedbackMappings id="41"/>
</Exercise>