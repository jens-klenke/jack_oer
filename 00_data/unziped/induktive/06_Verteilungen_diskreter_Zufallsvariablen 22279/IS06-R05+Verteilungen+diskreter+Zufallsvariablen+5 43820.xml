<Exercise id="1">
  <name>IS06-R05 Verteilungen diskreter Zufallsvariablen 5</name>
  <publicDescription></publicDescription>
  <internalNotes>W&apos;keit für min. x Richtige in einem Lottospiel berechnen

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>IndStat</name>
    </Tag>
  </tags>
  <resources id="4"/>
  <stages id="5">
    <RStage id="6">
      <internalName>1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Betrachtet werde eine alternative Version des Lottos bei dem $[var=m]$ aus $[var=N]$ gezogen werden und Sie ab mindestens $[var=x]$ Richtigen etwas gewinnen.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Wie hoch ist dann die Wahrscheinlichkeit, dass Sie etwas gewinnen?&lt;br /&gt;&#xd;
Benutzen Sie zur Berechnung entweder die $\verb|phyper()|$- oder $\verb|dhyper()|$-Funktion.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; Ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;</taskDescription>
      <defaultTransition id="7">
        <conditionExpression id="8">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="9">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="10"/>
      <stageTransitions id="11"/>
      <hints id="12">
        <StageHint id="13">
          <stagehint__order>0</stagehint__order>
          <text>Bei $\verb|dhyper(x, m, n, k)|$ bzw. $\verb|phyper(q, m, n, k)|$ m&amp;uuml;ssen Sie neben dem/den Funktionswert(en) $\verb|x|$ bzw. $\verb|q|$ die Anzahl der Gewinnzahlen $\verb|m|$, der restlichen Zahlen $\verb|n|$ sowie der zu ziehenden Zahlen $\verb|k|$ spezifizieren.&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden.)</text>
          <malus>0</malus>
          <stage class="RStage" reference="6"/>
        </StageHint>
        <StageHint id="14">
          <stagehint__order>1</stagehint__order>
          <text>Die Anzahl der Gewinnzahlen sowie der zu ziehenden Zahlen ist $[var=m]$. Die restlichen Zahlen ergeben sich aus der Gesamtanzahl aller Zahlen abzüglich der Gewinnzahlen, also $[var=N]-[var=m]=[var=n]$.</text>
          <malus>0</malus>
          <stage class="RStage" reference="6"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="15"/>
      <variableUpdatesBeforeCheck id="16"/>
      <variableUpdatesAfterCheck id="17"/>
      <variableUpdatesOnNormalExit id="18"/>
      <variableUpdatesOnRepeat id="19"/>
      <variableUpdatesOnSkip id="20"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="21"/>
      <initialCode></initialCode>
      <finalResultComputationString></finalResultComputationString>
      <testCasetuples id="22">
        <TestCaseTuple id="23">
          <testCases id="24">
            <StaticRTestCase id="25">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig. 

Achten Sie darauf, dass sie die $\verb|phyper()|$- oder $\verb|dhyper()|$-Funktion benutzen.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="26">
                <RGReQLQuery id="27">
                  <query>                from phyper, dhyper:V{FunctionCall} with
                phyper.name=&quot;phyper&quot; or
                dhyper.name=&quot;dhyper&quot;
                report 0 end</query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="28">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>43823</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="29">
          <testCases id="30">
            <DynamicRTestCase id="31">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}</postCode>
              <expectedOutput>1-phyper([var=x]-1,[var=m],[var=n],[var=m])</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="32">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>43824</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="6"/>
  <variableDeclarations id="33">
    <VariableDeclaration id="34">
      <name>m</name>
      <initializationCode id="35">
        <code>evaluateInR(&apos;round(runif(1, 6, 9))&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="36">
      <name>n</name>
      <initializationCode id="37">
        <code>evaluateInR(&apos;round(runif(1, 30, 45))&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="38">
      <name>x</name>
      <initializationCode id="39">
        <code>evaluateInR(&apos;round(runif(1, 2, [var=m]-3))&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="40">
      <name>x2</name>
      <initializationCode id="41">
        <code>evaluateInR(&apos;[var=x]-1&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="42">
      <name>N</name>
      <initializationCode id="43">
        <code>evaluateInR(&apos;[var=m]+[var=n]&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
  </variableDeclarations>
  <jSXGraphs id="44"/>
  <dynamicMolecules id="45"/>
  <resultFeedbackMappings id="46"/>
</Exercise>