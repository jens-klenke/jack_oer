<Exercise id="1">
  <name>IS09-R01 Schätztheorie 1</name>
  <publicDescription></publicDescription>
  <internalNotes>nverteilte Zufallszahlen generieren und Bias berechnen

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>IndStat</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">c2V0LnNlZWQoW3Zhcj1zXSkNCg==</content>
      <uploadTimestamp>2022-05-11T11:23:49.421166</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Erzeugen Sie sich insgesamt $[var=l]$ mal $[var=n]$ standardnormalverteilte Zufallszahlen von $X\sim N(0,1)$.&lt;br /&gt;&#xd;
Sch&amp;auml;tzen Sie die Varianz f&amp;uuml;r jede Stichprobe mithilfe der verzerrten Formel: $\frac{1}{n}\sum_{i=1}^n (x_i-\bar{x})^2$.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Sch&amp;auml;tzen Sie den Bias der Sch&amp;auml;tzfunktion.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; Ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Die Funktion $\verb|rnorm(n,mean,sd)|$ generiert normalverteilte Zufallszahlen.&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden.)</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="16">
          <stagehint__order>1</stagehint__order>
          <text>Eine Wiederholung des Vorgangs l&amp;auml;sst sich mit $\verb|replicate(n, expr)|$ durchf&amp;uuml;hren. In der Funktion $\verb|replicate|$ steht $\verb|n|$ f&amp;uuml;r die Anzahl der Wiederholungen und $\verb|expr|$ f&amp;uuml;r den Vorgang, der wiederholt werden soll&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden).</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="17">
          <stagehint__order>2</stagehint__order>
          <text>Ein einzelner Vorgang besteht aus dem Erzeugen der Zufallszahlen und dem berechnen der Varianz mithilfe des verzerrten Sch&amp;auml;tzers. Beachten Sie, das Sie den verzerrten Sch&amp;auml;tzer auch mithilfe der $\verb|var()|$-Funktion berechnen k&amp;ouml;nnen. Die $\verb|var()|$-funktion berechnet die unverzerrte Sch&amp;auml;tzung $\frac{1}{n-1}\sum_{i=1}^n (x_i-\bar{x})^2$&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden).</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="18">
          <stagehint__order>3</stagehint__order>
          <text>Daraus ergibt sich in R der Ausdruck:&lt;br /&gt;
$\verb|replicate([var=l], ([var=n]-1)/[var=n]*var(rnorm([var=n])))|$&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden).</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="19">
          <stagehint__order>4</stagehint__order>
          <text>Der empirische Bias berechnet sich durch die Abweichung des Mittelwerts der gesch&amp;auml;tzten Varianzen aus der Stichprobe und der wahren Varianz der Grundgesamtheit.&lt;br /&gt;
&lt;br /&gt;
(Es ist ein weiterer Hinweis vorhanden).</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="20">
          <stagehint__order>5</stagehint__order>
          <text>Sie müssen also von $\verb|mean(replicate([var=l], ([var=n]-1)/[var=n]*var(rnorm([var=n]))))|$ den wahren Wert abziehen. </text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="21"/>
      <variableUpdatesBeforeCheck id="22"/>
      <variableUpdatesAfterCheck id="23"/>
      <variableUpdatesOnNormalExit id="24"/>
      <variableUpdatesOnRepeat id="25"/>
      <variableUpdatesOnSkip id="26"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="27"/>
      <initialCode>set.seed([var=s])
</initialCode>
      <finalResultComputationString></finalResultComputationString>
      <testCasetuples id="28">
        <TestCaseTuple id="29">
          <testCases id="30">
            <StaticRTestCase id="31">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig. 

Achten Sie darauf, dass Sie die $\verb|rnorm()|$ Funktion benutzen.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="32">
                <RGReQLQuery id="33">
                  <query>	        from rn:V{FunctionCall} with
                rn.name=&quot;rnorm&quot; 
                report 0 end	</query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="34">
            <name></name>
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>44060</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="35">
          <testCases id="36">
            <DynamicRTestCase id="37">
              <points>50</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}
      otto &lt;- function(s,n,l){
		  set.seed(s)
		  mean( replicate(l, ((n-1)/(n))*var(rnorm(n) ) ) )
	}
	</postCode>
              <expectedOutput>otto([var=s], [var=n], [var=l])-1</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="38">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>44061</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="39">
    <VariableDeclaration id="40">
      <name>n</name>
      <initializationCode id="41">
        <code>randomIntegerBetween(95,110)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="42">
      <name>n2</name>
      <initializationCode id="43">
        <code>evaluateInR(&apos;[var=n]-1&apos;)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="44">
      <name>l</name>
      <initializationCode id="45">
        <code>randomIntegerBetween(1000,1200)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
    <VariableDeclaration id="46">
      <name>s</name>
      <initializationCode id="47">
        <code>randomIntegerBetween(100,1000)</code>
        <domain>MATH</domain>
      </initializationCode>
    </VariableDeclaration>
  </variableDeclarations>
  <jSXGraphs id="48"/>
  <dynamicMolecules id="49"/>
  <resultFeedbackMappings id="50"/>
</Exercise>