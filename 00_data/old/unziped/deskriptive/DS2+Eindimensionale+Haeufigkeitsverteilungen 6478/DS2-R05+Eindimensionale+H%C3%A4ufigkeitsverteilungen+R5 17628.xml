<Exercise id="1">
  <name>DS2-R05 Eindimensionale Häufigkeitsverteilungen R5</name>
  <publicDescription></publicDescription>
  <internalNotes>Quantile der Urliste berechnen

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>Desk_22</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">dXJsaXN0ZSA8LSBjKDExLDEzLDE1LDE2LDEyLDE4LDE0LDE1LDE3LDE0LDEyLDE2LDEzLDE1LDE3LDE2LDE1LDE0LDEzLDE1KQ==</content>
      <uploadTimestamp>2022-03-02T16:09:16.204634</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>#1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Lassen Sie sich mit Hilfe von R die Quintile des gegebenen Datensatzes $\verb|urliste|$ ausgeben.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;em&gt;(Wichtiger Hinweis: Geben Sie den Parameter &lt;/em&gt; $\verb|type=1|$ &lt;em&gt;an! Sonst werden die Quantile anders berechnet (die Default-Einstellung ist type=7))&lt;/em&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Benutzen Sie den $\verb|quantile()|$-Befehl.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="16">
          <stagehint__order>1</stagehint__order>
          <text>&amp;Uuml;bergeben Sie zun&amp;auml;chst den Datensatz f&amp;uuml;r den die Quantile zu berechnen sind und spezifieren Sie dann &amp;uuml;ber den Parameter $\verb|probs|$ die Quantile.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="17">
          <stagehint__order>2</stagehint__order>
          <text>&amp;Uuml;bergeben Sie die Quantile als Vektor.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="18">
          <stagehint__order>3</stagehint__order>
          <text>Quintile teilen den Datensatz in 5 Intervalle auf.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Dies war der letzte Hinweis.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="19"/>
      <variableUpdatesBeforeCheck id="20"/>
      <variableUpdatesAfterCheck id="21"/>
      <variableUpdatesOnNormalExit id="22"/>
      <variableUpdatesOnRepeat id="23"/>
      <variableUpdatesOnSkip id="24"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="25"/>
      <initialCode>urliste &lt;- c(11, 13, 15, 16, 12, 18, 14, 15, 17, 14, 12, 16, 13, 15, 17, 16, 15, 14, 13, 15)</initialCode>
      <finalResultComputationString>min(#{c17632},#{c17633})</finalResultComputationString>
      <testCasetuples id="26">
        <TestCaseTuple id="27">
          <testCases id="28">
            <StaticRTestCase id="29">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! Achten Sie darauf, dass sie die $\verb|quantile|$-Funktion benutzen und $\verb|type=1|$ setzen.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="30">
                <RGReQLQuery id="31">
                  <query>		from quan:V{FunctionCall}, lao3:V{LeftAssignmentOperator3}, pl:V{ParameterList}, type:V{Variable}, n:V{NumericLiteral}, rh:E{RightHandSide}, lh:E{LeftHandSide} with
                quan.name=&quot;quantile&quot; and
                quan --&gt; pl --&gt; lao3 and
                lao3 -- lh -&gt; type and
                type.name=&quot;type&quot; and
                lao3 -- rh -&gt; n and
                n.value=1
                report 0 end
		</query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="32">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>17632</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="33">
          <testCases id="34">
            <DynamicRTestCase id="35">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! Achten Sie darauf, dass Sie die Quantile als Vektor übergeben und den Datensatz in 5 Intervalle aufgeteilt haben.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}</postCode>
              <expectedOutput>quantile(c(11,13,15,16,12,18,14,15,17,14,12,16,13,15,17,16,15,14,13,15), p = seq(0, 1, 0.2), type=1)</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="36">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>17633</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="37"/>
  <jSXGraphs id="38"/>
  <dynamicMolecules id="39"/>
  <resultFeedbackMappings id="40"/>
</Exercise>