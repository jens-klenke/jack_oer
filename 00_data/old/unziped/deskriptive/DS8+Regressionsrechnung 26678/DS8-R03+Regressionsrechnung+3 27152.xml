<Exercise id="1">
  <name>DS8-R03 Regressionsrechnung 3</name>
  <publicDescription></publicDescription>
  <internalNotes>Überprüfen, ob die Summe der Residuen Null ergibt.

Die  Materialien sind lizenziert unter CC BY-NC-SA 4.0. Eine Kopie dieser Lizenz finden Sie unter http://creativecommons.org/licenses/by-nc-sa/4.0/

The materials are licensed under CC BY-NC-SA 4.0. You can find a copy of this license at http://creativecommons.org/licenses/by-nc-sa/4.0/</internalNotes>
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2">
    <Tag id="3">
      <name>Desk_22</name>
    </Tag>
  </tags>
  <resources id="4">
    <ExerciseResource id="5">
      <content id="6">cmVnIDwtIGxtKHdhaXRpbmd+ZXJ1cHRpb25zLGRhdGE9ZmFpdGhmdWwpDQo=</content>
      <uploadTimestamp>2022-04-11T10:38:39.865117</uploadTimestamp>
      <filename>source.r</filename>
      <description></description>
      <replacePlaceholder>false</replacePlaceholder>
    </ExerciseResource>
  </resources>
  <stages id="7">
    <RStage id="8">
      <internalName>#1</internalName>
      <externalName></externalName>
      <taskDescription>&lt;strong&gt;Aufgabenstellung:&amp;nbsp;&lt;/strong&gt;&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
Sie betrachten erneut das lm-Objekt $\verb|reg|$ aus den vorherigen Aufgaben. Sie haben in der Statistik-Vorlesung aufgepasst und sich gemerkt, dass die Summe der Residuen einer Regression nach der OLS-Methode immer Null ergibt.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&amp;Uuml;berpr&amp;uuml;fen Sie diese Aussage anhand des $\verb|reg|$-Objekts. Runden sie das Ergebnis auf 8 Nachkommastellen.&lt;br /&gt;&#xd;
&lt;br /&gt;&#xd;
&lt;span style=&quot;font-size:11px;&quot;&gt;&lt;em&gt;(Bevor Sie den Code abschicken, k&amp;ouml;nnen Sie &amp;uuml;ber den Button &amp;quot;Auswerten&amp;quot; ihren geschriebenen R-Code ausf&amp;uuml;hren und in der R-Konsole anzeigen lassen.)&lt;/em&gt;&lt;/span&gt;</taskDescription>
      <defaultTransition id="9">
        <conditionExpression id="10">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="11">
          <domain>MATH</domain>
        </stageExpression>
        <isRepeat>false</isRepeat>
      </defaultTransition>
      <skipTransitions id="12"/>
      <stageTransitions id="13"/>
      <hints id="14">
        <StageHint id="15">
          <stagehint__order>0</stagehint__order>
          <text>Das lm-Objekt enth&amp;auml;lt ein Unterobjekt namens $\verb|residuals|$. Sie k&amp;ouml;nnen wie &amp;uuml;blich mit dem $\$$-Operator darauf zugreifen.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="16">
          <stagehint__order>1</stagehint__order>
          <text>Zur Aufsummierung kann der $\verb|sum()|$-Befehl genutzt werden.&lt;br /&gt;
&lt;br /&gt;
&lt;em&gt;(Es ist ein weiterer Hinweis vorhanden.)&lt;/em&gt;</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
        <StageHint id="17">
          <stagehint__order>2</stagehint__order>
          <text>Das Ergebnis kann mit Hilfe des $\verb|round()|$-Befehls gerundet werden.</text>
          <malus>0</malus>
          <stage class="RStage" reference="8"/>
        </StageHint>
      </hints>
      <variableUpdatesOnEnter id="18"/>
      <variableUpdatesBeforeCheck id="19"/>
      <variableUpdatesAfterCheck id="20"/>
      <variableUpdatesOnNormalExit id="21"/>
      <variableUpdatesOnRepeat id="22"/>
      <variableUpdatesOnSkip id="23"/>
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="24"/>
      <initialCode>reg &lt;- lm(waiting ~ eruptions, data = faithful)
</initialCode>
      <finalResultComputationString>min(#{c27163},#{c27162})</finalResultComputationString>
      <testCasetuples id="25">
        <TestCaseTuple id="26">
          <testCases id="27">
            <StaticRTestCase id="28">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! Benutzen Sie zum Summieren der Residuen die $\verb|sum()|$-Funktion und achten Sie darauf, das Ergebnis zu runden.</feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <queries class="linked-list" id="29">
                <RGReQLQuery id="30">
                  <query>      from sum,round:V{FunctionCall} with
      sum.name=&quot;sum&quot; and
      round.name=&quot;round&quot;
      report 0 end
    </query>
                </RGReQLQuery>
              </queries>
            </StaticRTestCase>
          </testCases>
          <checkerConfiguration id="31">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>27162</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
        <TestCaseTuple id="32">
          <testCases id="33">
            <DynamicRTestCase id="34">
              <points>100</points>
              <pointsMode>GAIN</pointsMode>
              <name>imported testcase</name>
              <feedbackIfFailed>Leider nicht richtig! </feedbackIfFailed>
              <ruleMode>PRESENCE</ruleMode>
              <postCode>testFunc &lt;- function(){}</postCode>
              <expectedOutput>0</expectedOutput>
              <postprocessingFunction></postprocessingFunction>
              <tolerance>-4</tolerance>
            </DynamicRTestCase>
          </testCases>
          <checkerConfiguration id="35">
            <isActive>false</isActive>
            <hasVisibleResult>false</hasVisibleResult>
            <hasVisibleFeedback>false</hasVisibleFeedback>
            <isAsync>false</isAsync>
            <weight>1</weight>
            <persistentReference>27163</persistentReference>
          </checkerConfiguration>
        </TestCaseTuple>
      </testCasetuples>
    </RStage>
  </stages>
  <startStage class="RStage" reference="8"/>
  <variableDeclarations id="36"/>
  <jSXGraphs id="37"/>
  <dynamicMolecules id="38"/>
  <resultFeedbackMappings id="39"/>
</Exercise>